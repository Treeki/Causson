type WeatherState = enum(\
	Freezing(bool brr), Cold, Warm, Hot)

type Celsius = wrap real
type Fahrenheit = wrap real

type MaybeInt = enum(Some(int i), None)

def int:addOne(self) -> int {
	self + 1
}

def Celsius:toFahrenheit(self) -> Fahrenheit {
	let base = self.unwrap()
	base = base * (9. / 5.) + 32.
	Fahrenheit:wrap(base)
}

def Celsius:toState(self) -> WeatherState {
	let base = self.unwrap()
	if base < 0. {
		WeatherState:Freezing(true)
	} elif base < 15. {
		WeatherState:Cold
	} elif base < 25. {
		WeatherState:Warm
	} else {
		WeatherState:Hot
	}
}

def str:from(WeatherState s) -> str {
	match s {
		Hot => "Yep"
		_ => "Nope"
	}
}

def testIt(real value) -> void {
	print("Converting " + str:from(value) + ": " + str:from(Celsius:wrap(value).toFahrenheit().unwrap()))
	print()
}

def main() -> void {
	testIt(10.)
	testIt(20.)
	Celsius:wrap(20.).toState()
	let num = 5
	print(str:from(num.addOne()))
	print()
}
