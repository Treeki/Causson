component LoginWindow {
	done_flag = bool(false)

	wnd = gui:Window {
		.title = "Cool Demo"
		.border_width = 10

		gui:Box(gui:Orientation:Vertical) {
			.spacing = 10
			gui:Label { .text = "Welcome!" }

			gui:Box(gui:Orientation:Horizontal) {
				.spacing = 10
				gui:Label { .text = "Email:" }
				email_field = gui:Entry { .placeholder_text = Maybe<str>:Just("hi@example.com") }
			}

			gui:Box(gui:Orientation:Horizontal) {
				.spacing = 10
				gui:Label { .text = "Password:" }
				password_field = gui:Entry { .visibility = false }
			}

			gui:Label {
				.visible = self.password_ok() == false
				.text = self.password_error()
			}

			save_email = gui:CheckButton { .label = "Remember my email" }
			save_pw = gui:CheckButton {
				.label = "Remember my password"
				.sensitive = self.save_email.active
			}

			gui:Button {
				.label = "Sign me in"
				.sensitive = \
					self.email_field.text.length() > 0 && self.password_ok()

				.clicked -> {
					let succ = SuccessWindow:new()
					succ.email = self.email_field.text
					succ.wnd.show()

					self.kill_me()
				}
			}
		}

		.destroy -> if self.done_flag == false { gui:quit() }
	}

	def kill_me() -> void {
		self.done_flag = true
		self.wnd.destroy()
	}

	def password_ok() -> bool {
		let len = self.password_field.text.length()
		len >= 8 && len <= 16
	}
	def password_error() -> str {
		if self.password_field.text.length() < 8 {
			"Password too short"
		} elif self.password_field.text.length() > 16 {
			"Password too long"
		} else {
			""
		}
	}
}

component SuccessWindow {
	email = str("")

	wnd = gui:Window {
		.border_width = 10
		gui:Label { .text = "Thanks for signing up, " + self.email + "!" }

		.destroy -> gui:quit()
	}
}

def main() -> void {
	gui:init()
	let wind = LoginWindow:new()
	wind.wnd.show()
	gui:run()
}


